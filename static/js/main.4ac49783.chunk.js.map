{"version":3,"sources":["serviceWorker.js","reducers/index.js","constants.js","actions/index.js","containers/Search.js","components/RepoListItem.js","components/RepoDetail.js","components/PieChart.js","components/RepoIssues.js","containers/Results.js","index.js"],"names":["Boolean","window","location","hostname","match","initialState","loadState","errorDetail","mode","query","repos","repo","repoPath","issues","totalIssues","closedIssues","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","msg","concat","owner","login","name","items","total_count","open_issues_count","setLoadError","setIssueList","debouncedExecuteQuery","debounce","dispatch","_ref","q","split","fetch","then","resp","json","data","catch","err","stack","setQuery","connect","ownProps","value","handleChange","e","target","getState","react_default","a","createElement","className","placeholder","onChange","RepoListItem","_this$props","this","props","description","onClick","title","href","Component","RepoDetail","html_url","stargazers_count","watchers_count","forks_count","onClickIssues","PieChart","_this","ref","canvas","Chart","getContext","Pie","RepoIssues","total","closed","onClickFilter","open","PieChart_PieChart","label","color","map","i","key","id","selectRepo","r","repoIssues","filterIssues","filterState","_getState2","suffix","RepoListItem_RepoListItem","assign","RepoDetail_RepoDetail","RepoIssues_RepoIssues","store","createStore","applyMiddleware","thunk","render","es","containers_Search","containers_Results","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ac49783.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {REPO_SEARCH, REPO_DETAIL, REPO_ISSUES, LOADING, READY, ERROR} from '../constants';\n\nconst initialState = {\n  loadState: READY,\n  errorDetail: null,\n  mode: REPO_SEARCH,\n  query: '',\n  repos: [],\n  repo: null,\n  repoPath: '',\n  issues: [],\n  totalIssues: null,\n  closedIssues: null\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_QUERY':\n      return {\n        ...state,\n        query: action.query\n      }\n\n    case 'SET_LOAD_START': \n      return {\n        ...state,\n        loadState: LOADING,\n        errorDetail: null,\n      }\n\n    case 'SET_LOAD_READY': \n      return {\n        ...state,\n        loadState: READY\n      }\n\n    case 'SET_LOAD_ERROR': \n      return {\n        ...state,\n        loadState: ERROR,\n        errorDetail: action.msg\n      }\n\n    case 'REPO_SEARCH_MODE': \n      return {\n        ...state,\n        mode: REPO_SEARCH,\n        repos: [],\n        repo: null\n      }\n\n    case 'SET_REPO_LIST':\n      return {\n        ...state,\n        repos: action.repos\n      }\n\n    case 'SET_REPO': {\n      let repoPath = `${action.repo.owner.login}/${action.repo.name}`;\n      return {\n        ...state,\n        repoPath,\n        mode: REPO_DETAIL,\n        query: repoPath,\n        repo: action.repo\n      }\n    }\n\n    case 'SET_ISSUE_LIST': {\n      return {\n        ...state,\n        mode: REPO_ISSUES,\n        issues: action.issues.items,\n        totalIssues: action.issues.total_count,\n        closedIssues: action.issues.total_count - state.repo.open_issues_count\n      }\n    }\n    default:\n      return state\n  }\n}\n\nexport default reducer;\n","export const READY = 0;\nexport const LOADING = 1;\nexport const ERROR = 1;\nexport const REPO_SEARCH = 0;\nexport const REPO_DETAIL = 1;\nexport const REPO_ISSUES = 2;\n","import { debounce } from 'debounce';\n\nconst setLoadStart = () => ({ type: \"SET_LOAD_START\" })\nconst setLoadReady = () => ({ type: \"SET_LOAD_READY\" })\nconst setLoadError = (msg) => ({ type: \"SET_LOAD_ERROR\", msg })\nconst repoSearchMode = () => ({ type: \"REPO_SEARCH_MODE\" })\nconst setRepoList = (repos) => ({ type: \"SET_REPO_LIST\", repos })\nconst setIssueList = (issues) => ({ type: \"SET_ISSUE_LIST\", issues })\n\n\nconst executeQueryNow = (dispatch, { query })=>{\n  dispatch(setLoadStart())\n  let q = query.split(':')[0];\n  dispatch(repoSearchMode())\n  fetch(`https://api.github.com/search/repositories?q=${q}`)\n    .then((resp) => resp.json())\n    .then((data)=>{\n      dispatch(setLoadReady())\n      dispatch(setRepoList(data.items))\n    })\n    .catch((err)=>{\n      dispatch(setLoadError(err.stack))\n    })\n}\n\nconst debouncedExecuteQuery = debounce(executeQueryNow, 500)\n\nconst setQuery = query => ({ type: 'SET_QUERY', query })\n\nexport const executeQuery = (query) => (dispatch, getState) => {\n  dispatch(setQuery(query))\n  debouncedExecuteQuery(dispatch, getState())\n}\n\nexport const selectRepo = (repo) => ({ type: \"SET_REPO\", repo })\n\nexport const repoIssues = () => (dispatch, getState) => {\n  const { repoPath } = getState();\n  dispatch(setLoadStart())\n  dispatch(setQuery(repoPath+':issues'))\n  fetch(`https://api.github.com/search/issues?q=repo:${repoPath}+type:issue`)\n    .then((resp) => resp.json())\n    .then((data)=>{\n      dispatch(setLoadReady())\n      dispatch(setIssueList(data))\n    })\n    .catch((err)=>{\n      dispatch(setLoadError(err.stack))\n    })\n}\n\nexport const filterIssues = (filterState) => (dispatch, getState) => {\n  let { query, repoPath } = getState();\n  let split = query.split(':');\n  if (split.length === 2 && filterState === '') return;\n  else if (split.length > 2 && split[2] === filterState) return;\n  let suffix = '';\n  query = repoPath+':issues';\n  if (filterState.length > 0) {\n    suffix += '+state:'+filterState;\n    query += ':'+filterState;\n  }\n  dispatch(setLoadStart())\n  dispatch(setQuery(query))\n  fetch(`https://api.github.com/search/issues?q=repo:${repoPath}+type:issue${suffix}`)\n    .then((resp) => resp.json())\n    .then((data)=>{\n      dispatch(setLoadReady())\n      dispatch(setIssueList(data))\n    })\n    .catch((err)=>{\n      dispatch(setLoadError(err.stack))\n    })\n}\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport { executeQuery } from '../actions';\n\nconst Search = ({ value, handleChange }) => {\n  return <input className=\"Search\" type=\"text\" placeholder=\"Search repositories...\" value={value} onChange={e=>handleChange(e)} />\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  value: state.query\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  handleChange: (e)=>dispatch(executeQuery(e.target.value))\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Search)\n","import React, { Component } from 'react';\n\nexport default class RepoListItem extends Component {\n  render() {\n    const { name, owner, description, onClick } = this.props;\n    let repoPath = `${owner.login}/${name}`\n    return <li title={description}>\n      <a href={`#/${repoPath}`} onClick={onClick}>{repoPath}</a>\n    </li>\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class RepoDetail extends Component {\n  render() {\n    const { name, html_url, owner, stargazers_count, watchers_count, forks_count, description, onClickIssues } = this.props;\n    let repoPath = `${owner.login}/${name}`\n    return <div>\n      <a target=\"blank\" href={html_url}>External Link</a>\n      <h3>{owner.login}/{name}</h3>\n      <p>{ description }</p>\n      <p>Stars: { stargazers_count }</p>\n      <p>Watchers: { watchers_count }</p>\n      <p>Forks: { forks_count }</p>\n      <a href={`#/${repoPath}/issues`} onClick={onClickIssues}>Issues</a>\n    </div>\n  }\n}\n","import React, { Component } from 'react';\nimport * as Chart from \"chart.js\";\n\nexport default class PieChart extends Component {\n  render() {\n    return <div><canvas ref={(canvas)=>{\n      if (canvas) {\n        new Chart(canvas.getContext('2d')).Pie(this.props.data)\n      }\n    }}/></div>\n  }\n}\n","import React, { Component } from 'react';\nimport PieChart from './PieChart';\n\nexport default class RepoIssues extends Component {\n  render() {\n    const { issues, total, closed, onClickFilter } = this.props;\n    const open = total - closed;\n    if (issues) {\n      return <div>\n        <PieChart data={[\n          {\n            label: \"Open\",\n            value: open,\n            color: 'red',\n          },\n          { \n            label: \"Closed\",\n            value: closed,\n            color: 'green',\n          }\n        ]} />\n        <button onClick={()=>onClickFilter('')}>All</button>\n        <button onClick={()=>onClickFilter('open')}>Open</button>\n        <button onClick={()=>onClickFilter('closed')}>Closed</button>\n        <ul>\n          { issues.map((i)=><li key={i.id}>\n            <a target=\"blank\" href={i.html_url}>{i.title}</a>\n          </li>) }\n        </ul>\n      </div>\n    } else {\n      return null\n    }\n  }\n}\n\n","import React from 'react'\nimport { connect } from 'react-redux';\nimport {LOADING, ERROR, READY, REPO_SEARCH, REPO_DETAIL, REPO_ISSUES} from '../constants';\nimport RepoListItem from '../components/RepoListItem';\nimport RepoDetail from '../components/RepoDetail';\nimport RepoIssues from '../components/RepoIssues';\nimport * as actions from '../actions';\n\nconst Results = ({\n  loadState,\n  errorDetail,\n  mode,\n  repos,\n  repo,\n  issues,\n  totalIssues,\n  closedIssues,\n  selectRepo,\n  repoIssues,\n  filterIssues\n}) => {\n  switch (loadState) {\n    case LOADING:\n      return <p>Loading...</p>\n    case ERROR:\n      return <pre>{errorDetail}</pre>\n    case READY:\n      switch (mode) {\n        case REPO_SEARCH:\n          return <ul>\n            { repos.map((r)=><RepoListItem {...r} key={r.id} onClick={()=>selectRepo(r)}/>) }\n          </ul>\n        case REPO_DETAIL: \n          return <RepoDetail {...repo} onClickIssues={()=>repoIssues()} />\n        case REPO_ISSUES: \n          return <RepoIssues issues={issues} total={totalIssues} closed={closedIssues} onClickFilter={(a)=>filterIssues(a)}/>\n        default:\n          return null\n      }\n    default:\n      return null\n  }\n}\n\n// This may seem a bit redundant, compared to something like {...state}\n// but I think the improved verboseness improves traceability\nconst mapStateToProps = (state, ownProps) => ({\n  loadState: state.loadState,\n  errorDetail: state.errorDetail,\n  mode: state.mode,\n  repos: state.repos,\n  repo: state.repo,\n  issues: state.issues,\n  totalIssues: state.totalIssues,\n  closedIssues: state.closedIssues\n})\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  selectRepo: (r)=>dispatch(actions.selectRepo(r)),\n  repoIssues: ()=>dispatch(actions.repoIssues()),\n  filterIssues: (a)=>dispatch(actions.filterIssues(a)),\n})\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Results)\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux';\nimport reducer from './reducers';\n\nimport Search from './containers/Search'\nimport Results from './containers/Results'\n\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(thunk)\n);\n\n// I was going to add routing too, but looks like react-router was completely rewritten in v4\n// rather than learn the new version or use an old version, I am limiting scope to only:\n// * refactor current design to unidirectional flow with redux\nrender(\n  <Provider store={store}>\n    <div className=\"App\">\n      <Search />\n      <Results />\n    </div>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}